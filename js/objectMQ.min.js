window.ObjectMQ = {mqElements:[], MQs:[], activeMQ:null, init:function() {
  var a = this;
  $("body").find(".mq-element-js").each(function() {
    var b = $(this), d = a.parseMQTriggers(b.attr("data-mq-triggers")), e = !1, c = a.mqElements[a.mqElements.length - 1];
    if(c) {
      var f = c.object, e = a.compareElements(b, f)
    }
    e ? (f = f.add(b), c.object = f) : a.mqElements.push({object:b, triggers:d})
  })
}, compareElements:function(a, b) {
  var d = !1, e = !1, c = !1;
  a.attr("class") === b.attr("class") && (d = !0);
  a.width() === b.width() && (e = !0);
  a.parent().is(b.parent()) && (c = !0);
  return d && e && c ? !0 : !1
}, applyMQ:function() {
  $.each(this.mqElements, function() {
    var a = this, b = a.object, d = a.triggers;
    a.width = b.width();
    var e = a.width, c = a.currentLT, f = a.currentGT;
    if("undefined" === typeof c || a.width < f || a.width > c) {
      var g = "", h = "", j = !1;
      $.each(d, function(d, c) {
        b.removeClass("lt-" + c + " " + ("gt-" + c));
        c <= e ? (g += "gt-" + c + " ", a.currentGT = c) : c > e && (h += "lt-" + c + " ", j || (a.currentLT = c, j = !0))
      });
      d = "";
      g && (d += g);
      h && (d += h);
      b.addClass(d)
    }
  })
}, parseMQTriggers:function(a) {
  return a.split(",")
}, arrayUnique:function(a) {
  var b = [];
  $.each(a, function(a, e) {
    -1 === $.inArray(e, b) && b.push(e)
  });
  return b.sort(function(a, b) {
    return a - b
  })
}};